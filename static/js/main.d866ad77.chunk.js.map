{"version":3,"sources":["components/menuBar/MenuBar.tsx","components/drawerComponent/DrawerComponent.tsx","components/navPanel/NavPanel.tsx","views/movie/Movie.tsx","services/index.ts","store/actions/todos.actions.ts","hooks/useService.ts","store/actions/fav.actions.ts","store/reducers/todos.reducer.ts","store/reducers/fav.reducer.ts","store/store.ts","store/index.ts","services/fav.service.ts","store/selectors/fav.selectors.ts","services/utils.js","services/movies.service.ts","views/searchMovie/SearchMovie.tsx","hooks/deBounce.ts","views/searchMovieDetail/SearchMovieDetail.tsx","views/home/Home.tsx","services/todo.service.ts","store/selectors/todos.selectors.ts","views/todoPanel/TodoPanel.tsx","views/FavPanel/FavPanel.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["makeClasses","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","MenuBar","onIconClick","classes","className","AppBar","position","color","Toolbar","IconButton","edge","aria-label","onClick","Typography","variant","drawerContent","margin","width","padding","button","DrawerComponent","shouldBeOpen","onDrawerClose","React","useState","isOpen","setIsOpen","history","useHistory","RedirectTo","path","name","push","Drawer","open","onClose","Button","startIcon","NavPanel","drawerOpen","setDrawerOpen","Movie","TodoStoreActions","context","Map","useService","Service","useRef","has","get","service","set","getService","current","FavouritesStoreActions","todosActions","todo","type","SET_NEW_FAV","payload","id","SET_TODO_DONE","SET_DELETE_TODO","todosListInitialState","list","description","done","label","favouritesActions","favourites","SET_DELETE_FAV","cookies","Cookies","init","undefined","favouritesListInitialState","initialStoreState","todos","reducers","combineReducers","state","actions","filter","el","todoFound","find","store","createStore","composeWithDevTools","FavouritesService","dispatch","favouritesSelector","createSelector","http","url","fetch","then","resp","json","URL","API","movieService","searchByName","a","searchResult","Error","console","log","result","totalResults","parseInt","movies","Search","map","movie","imdbID","poster","Poster","Title","Type","year","Year","searchById","resultById","production","Production","plot","Plot","ageRating","Rated","releaseDate","Released","writer","Writer","director","Director","actors","Actors","awards","Awards","rating","votes","DVD","useStyles","marginBottom","marginLeft","display","height","textAlign","content","maxHeight","overflow","media","marginTop","center","action","loading","SearchMovie","setMovies","movieToSearch","setMovieToSearch","isLoading","setLoading","debounce","value","delay","debounceValue","setDebounceValue","useEffect","handler","setTimeout","clearTimeout","deBounce","favouritesService","useSelector","TextField","placeholder","fullWidth","InputLabelProps","shrink","onChange","event","target","CircularProgress","size","length","index","Card","key","CardActionArea","CardContent","gutterBottom","component","CardMedia","image","CardActions","f","props","deleteFavourites","setNewFavourites","root2","bullet","transform","fontSize","pos","SearchMovieDetail","reciveMovie","setMovie","movieInfo","setMovieInfo","location","handleDelFavourites","handleAddFavourites","Home","TodoService","todosSelector","TodoPanel","todoService","setNewTodo","FavPanel","App","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d866ad77.chunk.js","sourcesContent":["import React from 'react';\nimport { AppBar, IconButton, Toolbar, Typography } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\n\n\nconst makeClasses = makeStyles((theme: Theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n    }\n}));\n\ninterface IMenuBarProps {\n    onIconClick: () => void;\n}\n\nconst MenuBar: React.FC<IMenuBarProps> = ({ onIconClick }) => {\n    const classes = makeClasses();\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"fixed\" color=\"default\">\n                <Toolbar>\n                    <IconButton\n                        edge=\"start\"\n                        color=\"inherit\"\n                        aria-label=\"menu\"\n                        className={classes.menuButton}\n                        onClick={() => onIconClick()}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography\n                        variant=\"h6\"\n                        className={classes.title}\n                    >\n                        Movie Searcher\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n\n        </div>\n    );\n};\n\nexport default MenuBar;","import React from 'react';\r\nimport {Button, Drawer} from '@material-ui/core';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport { useHistory } from 'react-router';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport MovieIcon from '@material-ui/icons/Movie';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\n\r\nconst makeClasses = makeStyles((theme: Theme) => ({\r\n    drawerContent: {\r\n        margin: '20px',\r\n        width: '20vh',\r\n        padding: '10px',\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n        padding: '10px',\r\n        width: \"20vh\"\r\n    },\r\n}));\r\n\r\ninterface IDrawerComponentProps {\r\n    shouldBeOpen: boolean,\r\n    onDrawerClose: () => void;\r\n}\r\n\r\n\r\nconst DrawerComponent: React.FC<IDrawerComponentProps> = ({ shouldBeOpen, onDrawerClose }) => {\r\n    const classes = makeClasses();\r\n    const [isOpen, setIsOpen] = React.useState(false);\r\n    const history = useHistory();\r\n\r\n    const RedirectTo = (path: string, name: string) => <div onClick={() => history.push(path)}>{name}</div>\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Drawer\r\n                open={isOpen || shouldBeOpen}\r\n                onClose={() => {\r\n                    setIsOpen(false)\r\n                    onDrawerClose()\r\n                }}\r\n            >\r\n                <div className={classes.drawerContent}>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"default\"\r\n                        className={classes.button}\r\n                        startIcon={<HomeIcon />}\r\n                    >\r\n                        {RedirectTo('/145985fakultetSoftwarehut/', 'Home')}\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"default\"\r\n                        className={classes.button}\r\n                        startIcon={<MovieIcon />}\r\n                    >\r\n                        {RedirectTo('/145985fakultetSoftwarehut/movie', 'Movie')}\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"default\"\r\n                        className={classes.button}\r\n                        startIcon={<SearchIcon />}\r\n                    >\r\n                        {RedirectTo('/145985fakultetSoftwarehut/search', 'Search')}\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"default\"\r\n                        className={classes.button}\r\n                        startIcon={<FavoriteIcon />}\r\n                    >\r\n                        {RedirectTo('/145985fakultetSoftwarehut/fav', 'Favourites')}\r\n                    </Button>\r\n                </div>\r\n            </Drawer>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DrawerComponent;","import React from 'react';\nimport MenuBar from '../menuBar/MenuBar';\nimport DrawerComponent from '../drawerComponent/DrawerComponent'\n\n\nconst NavPanel = () => {\n    const [drawerOpen, setDrawerOpen] = React.useState(false);\n\n\n    return (\n        <>\n            <MenuBar onIconClick={() => setDrawerOpen(true)} />\n            <DrawerComponent shouldBeOpen={drawerOpen} onDrawerClose={() => setDrawerOpen(false)} />\n        </>\n    );\n}\n\nexport default NavPanel;","import React from 'react';\nimport NavPanel from '../../components/navPanel/NavPanel'\n\n\nconst Movie = () => {\n\n\n    return (\n        <div>\n            <NavPanel />\n\n        </div>\n    );\n};\n\nexport default Movie;","const context = new Map(); // keeps instances of services\n\nexport const getService = <T extends any>(Service: new () => T): T => {\n  if (context.has(Service)) {\n    return context.get(Service);\n  }\n  const service = new Service();\n  context.set(Service, service);\n  return service;\n};\n","import { ITodo } from '../reducers/todos.reducer';\n\nexport enum TodoStoreActions {\n  SET_TODO_DONE = 'SET_TODO_DONE',\n  SET_NEW_FAV = 'SET_NEW_FAV',\n  SET_DELETE_TODO = 'SET_DELETE_TODO',\n}\n\n\nexport interface ISetTodoDone {\n  type: TodoStoreActions.SET_TODO_DONE,\n  payload: {\n    id: number,\n  }\n}\n\nexport interface ISetNewTodo {\n  type: TodoStoreActions.SET_NEW_FAV,\n  payload: {\n    todo: ITodo\n  }\n}\n\nexport interface ISetDeleteTodo {\n  type: TodoStoreActions.SET_DELETE_TODO,\n  payload: {\n    todo: ITodo\n  }\n}\n\nexport const todosActions = {\n  setNewTodo: (todo: ITodo) => ({\n    type: TodoStoreActions.SET_NEW_FAV,\n    payload: {\n      todo\n    }\n  }),\n  setTodoDone: (id: number) => ({\n    type: TodoStoreActions.SET_TODO_DONE,\n    payload: {\n      id\n    }\n  }),\n  setDeleteTodo: (todo: ITodo) => ({\n    type: TodoStoreActions.SET_DELETE_TODO,\n    payload: {\n      todo\n    }\n  })\n};\n\n\nexport type Actions = ISetTodoDone & ISetNewTodo & ISetDeleteTodo;\n","import React from 'react';\nimport { getService } from '../services';\n\nexport const useService = <T extends any>(Service: new () => T) => {\n  const { current } = React.useRef(getService(Service));\n  return current;\n};\n","import { IFavourites } from '../reducers/fav.reducer';\n\nexport enum FavouritesStoreActions {\n  SET_NEW_FAV = 'SET_NEW_FAV',\n  SET_DELETE_FAV = 'SET_DELETE_FAV',\n}\n\n\nexport interface ISetNewFavourites {\n  type: FavouritesStoreActions.SET_NEW_FAV,\n  payload: {\n    favourites: IFavourites\n  }\n}\n\nexport interface ISetDeleteFavourites {\n  type: FavouritesStoreActions.SET_DELETE_FAV,\n  payload: {\n    favourites: IFavourites\n  }\n}\n\nexport const favouritesActions = {\n  setNewFavourites: (favourites: IFavourites) => ({\n    type: FavouritesStoreActions.SET_NEW_FAV,\n    payload: {\n      favourites\n    }\n  }),\n  setDeleteFavourites: (favourites: IFavourites) => ({\n    type: FavouritesStoreActions.SET_DELETE_FAV,\n    payload: {\n      favourites\n    }\n  })\n};\n\n\nexport type Actions =  ISetNewFavourites & ISetDeleteFavourites;","import { Reducer } from 'redux';\nimport { Actions, TodoStoreActions } from '../actions/todos.actions';\n\nexport interface ITodo {\n  id: number;\n  label: string;\n  done: boolean;\n  description: string;\n}\n\nexport interface ITodosListStoreState {\n  list: ITodo[];\n}\n\nexport const todosListInitialState: ITodosListStoreState = {\n  list: [\n    {\n      id: -1,\n      description: '',\n      done: false,\n      label: ''\n    }\n  ],\n};\n\n\nexport const todosStoreReducer: Reducer<ITodosListStoreState, Actions> = (state: ITodosListStoreState = todosListInitialState, actions: Actions) => {\n  switch (actions.type) {\n    case TodoStoreActions.SET_NEW_FAV :\n      return {\n        ...state,\n        list: [...state.list, actions.payload.todo]\n      };\n    case TodoStoreActions.SET_DELETE_TODO:\n      return {\n        ...state,\n        list: state.list.filter(el => el.id !== actions.payload.todo.id)\n      };\n    case TodoStoreActions.SET_TODO_DONE:\n      const todoFound = state.list.find(el => el.id === actions.payload.id);\n      if (todoFound) {\n        todoFound.done = true;\n        return {\n          ...state,\n          list: [...state.list.filter(el => el.id !== actions.payload.id), todoFound],\n        };\n      }\n      return state;\n    default:\n      return state;\n  }\n};\n","import { Reducer } from 'redux';\r\nimport { Actions, FavouritesStoreActions } from '../actions/fav.actions';\r\nimport Cookies from 'universal-cookie';\r\n\r\n\r\nconst cookies = new Cookies();\r\nlet init = [];\r\nexport interface IFavourites {\r\n    id: string;\r\n    title: string;\r\n    year: string;\r\n    type: string;\r\n    poster: string\r\n}\r\n\r\nexport interface IFavouritesListStoreState {\r\n    list: IFavourites[];\r\n}\r\n\r\nif(cookies.get('fav')!==undefined)\r\n{\r\n    init = cookies.get('fav')\r\n}\r\nexport const favouritesListInitialState: IFavouritesListStoreState = {\r\n    list: init,\r\n};\r\n\r\nexport const favouritesStoreReducer: Reducer<IFavouritesListStoreState, Actions> = (state: IFavouritesListStoreState = favouritesListInitialState, actions: Actions) => {\r\n    switch (actions.type) {\r\n        case FavouritesStoreActions.SET_NEW_FAV :\r\n            return {\r\n                ...state,\r\n                list: [...state.list, actions.payload.favourites]\r\n            };\r\n        case FavouritesStoreActions.SET_DELETE_FAV:\r\n            return {\r\n                ...state,\r\n                list: state.list.filter(el => el.id !== actions.payload.favourites.id)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { combineReducers } from 'redux';\n\nimport { ITodosListStoreState, todosListInitialState, todosStoreReducer } from './reducers/todos.reducer';\nimport { IFavouritesListStoreState, favouritesListInitialState, favouritesStoreReducer } from './reducers/fav.reducer';\nimport * as TodosActions from './actions/todos.actions';\nimport * as FavouritesActions from './actions/fav.actions'\n\nexport type StoreActions = TodosActions.Actions;\nexport type StoreActionsFav = FavouritesActions.Actions;\n\nexport interface IStoreState {\n  favourites: IFavouritesListStoreState;\n  todos: ITodosListStoreState;\n}\n\nexport const initialStoreState: IStoreState = {\n  favourites: favouritesListInitialState,\n  todos: todosListInitialState,\n};\n\nexport const reducers = combineReducers<IStoreState>({\n  favourites: favouritesStoreReducer,\n  todos: todosStoreReducer,\n});\n","import { createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport {initialStoreState, IStoreState, reducers, /*StoreActions,*/ StoreActionsFav} from './store';\n\n\n//const store = createStore<IStoreState, StoreActions, any, any>(reducers, initialStoreState, composeWithDevTools());\nconst store = createStore<IStoreState, StoreActionsFav, any, any>(reducers, initialStoreState, composeWithDevTools());\nexport default store;\n\n","import { IFavourites } from '../store/reducers/fav.reducer';\nimport store from '../store';\nimport { favouritesActions } from '../store/actions/fav.actions';\n\nexport class FavouritesService {\n\n  setNewFavourites(favourites: IFavourites) {\n   store.dispatch(favouritesActions.setNewFavourites(favourites));\n  }\n\n  deleteFavourites(favourites: IFavourites) {\n    store.dispatch(favouritesActions.setDeleteFavourites(favourites));\n  }\n\n\n}\n","import { IStoreState } from '../store';\nimport { createSelector } from 'reselect';\n\nexport const favouritesSelector = createSelector(\n  (state: IStoreState) => state.favourites,\n    favourites => favourites.list\n);\n\n","const http = {\r\n    get: (url) => fetch(url).then(resp => resp.json()),\r\n};\r\n\r\nexport default http;\r\nexport const URL = `https://www.omdbapi.com/?apikey=549d12a`;","\r\nimport http, { URL } from './utils';\r\n\r\nconst API = {\r\n    SEARCH_BY_NAME: (name: string) => `${URL}&s=${name}`,\r\n    SEARCH_BY_ID: (id: string) => `${URL}&i=${id}`,\r\n};\r\n\r\n\r\n/*\r\nPoster: \"https://m.media-amazon.com/images/M/MV5BNDYxNjQyMjAtNTdiOS00NGYwLWFmNTAtNThmYjU5ZGI2YTI1XkEyXkFqcGdeQXVyMTMxODk2OTU@._V1_SX300.jpg\"\r\nTitle: \"The Avengers\"\r\nType: \"movie\"\r\nYear: \"2012\"\r\nimdbID: \"tt0848228\"\r\nError: \"Movie not found!\"\r\nResponse: \"False\"\r\nActors: \"Robert Downey Jr., Chris Evans, Mark Ruffalo, Chris Hemsworth\"\r\nAwards: \"Nominated for 1 Oscar. Another 38 wins & 79 nominations.\"\r\nBoxOffice: \"$623,279,547\"\r\nCountry: \"USA\"\r\nDVD: \"25 Sep 2012\"\r\nDirector: \"Joss Whedon\"\r\nGenre: \"Action, Adventure, Sci-Fi\"\r\nLanguage: \"English, Russian, Hindi\"\r\nMetascore: \"69\"\r\nPlot: \"Earth's mightiest heroes must come together and learn to fight as a team if they are going to stop the mischievous Loki and his alien army from enslaving humanity.\"\r\nPoster: \"https://m.media-amazon.com/images/M/MV5BNDYxNjQyMjAtNTdiOS00NGYwLWFmNTAtNThmYjU5ZGI2YTI1XkEyXkFqcGdeQXVyMTMxODk2OTU@._V1_SX300.jpg\"\r\nProduction: \"Walt Disney Pictures\"\r\nRated: \"PG-13\"\r\nRatings -> Source: \"Internet Movie Database\" Value: \"8.0/10\"\r\nReleased: \"04 May 2012\"\r\nResponse: \"True\"\r\nRuntime: \"143 min\"\r\nTitle: \"The Avengers\"\r\nType: \"movie\"\r\nWebsite: \"N/A\"\r\nWriter: \"Joss Whedon (screenplay), Zak Penn (story), Joss Whedon (story)\"\r\nYear: \"2012\"\r\nimdbID: \"tt0848228\"\r\nimdbRating: \"8.0\"\r\nimdbVotes: \"1,225,316\"\r\n* */\r\n\r\ninterface IMovieSearchResponseMovie {\r\n    Poster: string;\r\n    Title: string;\r\n    Type: string;\r\n    Year: string;\r\n    imdbID: string;\r\n}\r\n\r\ninterface IMovieResposeProps {\r\n    Error?: string;\r\n    Response: string;\r\n}\r\n\r\ninterface IMovieSearchResponse extends IMovieResposeProps {\r\n    totalResults: string;\r\n    Search: IMovieSearchResponseMovie[];\r\n}\r\n\r\ninterface IMovieBasicProps {\r\n    poster: string;\r\n    title: string;\r\n    type: string;\r\n    year: string;\r\n    id: string;\r\n}\r\n\r\nexport interface IMoviesProps {\r\n    movies: IMovieBasicProps[];\r\n    totalResults: number;\r\n}\r\n\r\n\r\ninterface IMovieResponseRating {\r\n    Source: string;\r\n    Value: string;\r\n}\r\n\r\ninterface IMovieResponse extends IMovieResposeProps {\r\n    Actors: string;\r\n    Awards: string;\r\n    BoxOffice: string;\r\n    Country: string;\r\n    DVD: string;\r\n    Director: string;\r\n    Genre: string;\r\n    Language: string;\r\n    Metascore: string;\r\n    Plot: string;\r\n    Poster: string;\r\n    Production: string;\r\n    Rated: string;\r\n    Ratings: IMovieResponseRating[];\r\n    Released: string;\r\n    Runtime: string;\r\n    Title: string;\r\n    Type: string;\r\n    Website: string;\r\n    Writer: string;\r\n    Year: string;\r\n    imdbID: string;\r\n    imdbRating: string;\r\n    imdbVotes: string;\r\n}\r\n\r\ninterface IMovieProps {\r\n    production: string;\r\n    plot: string;\r\n    title: string;\r\n    ageRating: string;\r\n    releaseDate: string;\r\n    writer: string;\r\n    director: string;\r\n    actors: string;\r\n    awards: string;\r\n    rating: string;\r\n    votes: string;\r\n    poster: string;\r\n}\r\n\r\n\r\nconst movieService = {\r\n    searchByName: async (name: string) => {\r\n        try {\r\n            const searchResult: IMovieSearchResponse = await http.get(API.SEARCH_BY_NAME(name));\r\n            if (searchResult?.Error) {\r\n                console.log(searchResult.Error);\r\n                return null;\r\n            } else {\r\n                const result: IMoviesProps = {\r\n                    totalResults: parseInt(searchResult.totalResults, 10),\r\n                    movies: searchResult.Search.map((movie) => ({\r\n                        id: movie.imdbID,\r\n                        poster: movie.Poster,\r\n                        title: movie.Title,\r\n                        type: movie.Type,\r\n                        year: movie.Year\r\n                    })),\r\n                };\r\n                return result;\r\n            }\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n\r\n    },\r\n    searchById: async (id: string) => {\r\n        try {\r\n            const resultById: IMovieResponse = await http.get(API.SEARCH_BY_ID(id));\r\n            const result: IMovieProps = {\r\n                production: resultById.Production,\r\n                plot: resultById.Plot,\r\n                title: resultById.Title,\r\n                ageRating: resultById.Rated,\r\n                releaseDate: resultById.Released,\r\n                writer: resultById.Writer,\r\n                director: resultById.Director,\r\n                actors: resultById.Actors,\r\n                awards: resultById.Awards,\r\n                rating: resultById.Rated,\r\n                votes: resultById.DVD,\r\n                poster: resultById.Poster,\r\n            }\r\n            return result\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    },\r\n\r\n};\r\n\r\nexport default movieService;","import React from 'react';\r\nimport NavPanel from '../../components/navPanel/NavPanel'\r\nimport deBounce from \"../../hooks/deBounce\";\r\nimport { useService} from \"../../hooks/useService\";\r\nimport { FavouritesService } from '../../services/fav.service';\r\nimport { useSelector } from 'react-redux';\r\nimport { favouritesSelector } from '../../store/selectors/fav.selectors';\r\nimport { useHistory } from 'react-router';\r\nimport movieService, { IMoviesProps } from '../../services/movies.service';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Cookies from 'universal-cookie';\r\nimport {\r\n    Button,\r\n    Card,\r\n    CardActionArea,\r\n    CardActions,\r\n    CardContent,\r\n    CardMedia, CircularProgress,\r\n    Typography\r\n} from \"@material-ui/core\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        marginBottom: \"1vh\",\r\n        marginLeft: \"1.5vw\",\r\n        display: \"inline-block\",\r\n        width: '30vw',\r\n        height: 'auto',\r\n        textAlign: 'center',\r\n    },\r\n    content: {\r\n        maxHeight:'15vh',\r\n        overflow: 'hidden',\r\n    },\r\n    media: {\r\n        marginTop : \"1vh\",\r\n        height:'53vh',\r\n    },\r\n    center: {\r\n        marginLeft: 'calc(50% - 16vw)',\r\n        marginTop : '11vh',\r\n        marginBottom : \"2vh\",\r\n        width: '30vw',\r\n    },\r\n    action: {\r\n        padding: 5,\r\n        marginTop: 2,\r\n        marginRight: 'auto',\r\n        marginLeft: 'auto',\r\n    },\r\n    loading: {\r\n        marginLeft: 'calc(50% - 4vw)',\r\n        marginTop : \"11vh\",\r\n        marginBottom : \"2vh\",\r\n    },\r\n});\r\n\r\n\r\nconst SearchMovie = () => {\r\n    const classes = useStyles();\r\n    const [movies, setMovies] = React.useState<IMoviesProps | null>(null);\r\n    const [movieToSearch, setMovieToSearch] = React.useState('');\r\n    const [isLoading, setLoading] = React.useState(false);\r\n    const debounce = deBounce(movieToSearch, 500);\r\n    const history = useHistory();\r\n    const favouritesService = useService(FavouritesService);\r\n    const favourites = useSelector(favouritesSelector);\r\n    const cookies = new Cookies();\r\n\r\n    const RedirectTo = (\r\n        path: string,\r\n        name: string,\r\n        state:\r\n            {\r\n                id: string,\r\n                title: string,\r\n                year: string,\r\n                type: string,\r\n                poster: string,\r\n            }\r\n    ) => <Button color=\"secondary\" className={classes.action} onClick={() => history.push(path, state)}>{name}</Button>\r\n\r\n    React.useEffect(() => {\r\n        if (debounce){\r\n            setLoading(true);\r\n            movieService.searchByName(debounce).then(resp => {\r\n                if (resp) {\r\n                    setMovies(resp);\r\n                    setLoading(false);\r\n                }\r\n                else\r\n                {\r\n                    setMovies(null);\r\n                    setLoading(false);\r\n                }\r\n            });\r\n        }\r\n\r\n    }, [debounce]);\r\n\r\n    const handleAddFavourites = (props : any) => {\r\n        favouritesService.setNewFavourites({\r\n            id: props.id,\r\n            title: props.title,\r\n            year: props.year,\r\n            type: props.type,\r\n            poster: props.poster\r\n        });\r\n    }\r\n\r\n    const handleDelFavourites = (props : any) => {\r\n        favouritesService.deleteFavourites({\r\n            id: props.id,\r\n            title: props.title,\r\n            year: props.year,\r\n            type: props.type,\r\n            poster: props.poster\r\n        });\r\n    }\r\n    cookies.set('fav', favourites, { path: '/' });\r\n    return (\r\n        <div>\r\n            <NavPanel/>\r\n            <TextField\r\n                className={classes.center}\r\n                color=\"secondary\"\r\n                id=\"outlined-full-width\"\r\n                label=\"Wyszukaj Film\"\r\n                placeholder=\"Tytuł filmu\"\r\n                fullWidth\r\n                margin=\"normal\"\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n                variant=\"outlined\"\r\n                onChange={event => {\r\n                    setMovieToSearch(event.target.value)\r\n                    setLoading(true)\r\n                }}\r\n            />\r\n            <br />\r\n            {isLoading ?\r\n                <div className={classes.loading}>\r\n                    <CircularProgress color=\"secondary\" size=\"8vw\" />\r\n                </div>\r\n                :\r\n                ''}\r\n            {!!movies?.movies.length &&\r\n            movies?.movies.map((movie, index) => (\r\n                <Card key={index} className={classes.root} color=\"secondary\" variant=\"outlined\">\r\n                    <CardActionArea >\r\n                        <CardContent className={classes.content}>\r\n                            <Typography className={classes.content} gutterBottom variant=\"h6\" component=\"h2\">\r\n                                <p>{movie.title}<br />{movie.year}</p>\r\n                            </Typography>\r\n                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                {movie.type}\r\n                            </Typography>\r\n                        </CardContent>\r\n                        <CardMedia\r\n                            className={classes.media}\r\n                            image={movie.poster !== \"N/A\" ? movie.poster : 'https://upload.wikimedia.org/wikipedia/commons/a/ac/No_image_available.svg'}\r\n                            title={movie.title}\r\n                        />\r\n                    </CardActionArea>\r\n                    <CardActions>\r\n                        {favourites.filter(f => f.id === movie.id).length ?\r\n                            <Button onClick={() => handleDelFavourites(movie)}\r\n                                    size=\"small\"\r\n                                    color=\"secondary\" variant=\"outlined\"\r\n                                    className={classes.action}\r\n                            >\r\n                                Usuń z ulubionych\r\n                            </Button>\r\n                            :\r\n                            <Button onClick={() => handleAddFavourites(movie)}\r\n                                    size=\"small\"\r\n                                    color=\"secondary\" variant=\"outlined\"\r\n                                    className={classes.action}\r\n                            >\r\n                                Dodaj do ulubionych\r\n                            </Button>\r\n                        }\r\n                        {RedirectTo(\"/145985fakultetSoftwarehut/searchDetail/\"+movie.id, 'Szczegóły', {\r\n                            id: movie.id,\r\n                            title: movie.title,\r\n                            year: movie.year,\r\n                            type: movie.type,\r\n                            poster: movie.poster})}\r\n                    </CardActions>\r\n                </Card>\r\n            ))\r\n            }\r\n\r\n        </div>\r\n    );\r\n};\r\nexport default SearchMovie;\r\n","import {useState, useEffect} from 'react';\r\n\r\nexport default function useDebounce(value: any, delay: number) {\r\n    const [debounceValue, setDebounceValue] = useState(value);\r\n    useEffect(\r\n        () =>{\r\n            const handler = setTimeout(()=>{\r\n                setDebounceValue(value);\r\n            }, delay);\r\n\r\n            return () => {\r\n                clearTimeout(handler);\r\n            };\r\n        },\r\n        [value, delay]\r\n    );\r\n    return debounceValue;\r\n}","import React from 'react';\r\nimport NavPanel from '../../components/navPanel/NavPanel'\r\nimport { useService} from \"../../hooks/useService\";\r\nimport { FavouritesService } from '../../services/fav.service';\r\nimport { useSelector } from 'react-redux';\r\nimport { favouritesSelector } from '../../store/selectors/fav.selectors';\r\nimport movieService from '../../services/movies.service';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n//test\r\nimport {\r\n    Button,\r\n    Card,\r\n    CardActionArea,\r\n    CardActions,\r\n    CardContent,\r\n    CardMedia,\r\n    Typography\r\n} from \"@material-ui/core\";\r\nimport Cookies from 'universal-cookie';\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        marginTop: \"6vh\",\r\n        marginBottom: \"1vh\",\r\n        marginLeft: \"1.5vw\",\r\n        display: \"inline-block\",\r\n        width: '30vw',\r\n        height: '85vh',\r\n        textAlign: 'center',\r\n    },\r\n    root2: {\r\n        marginTop: \"6vh\",\r\n        marginBottom: \"1vh\",\r\n        marginLeft: \"1.5vw\",\r\n        display: \"inline-block\",\r\n        width: '64.5vw',\r\n        height: '85vh',\r\n        textAlign: 'left',\r\n    },\r\n    content: {\r\n        maxHeight:'15vh',\r\n        overflow: 'hidden',\r\n        padding: 20\r\n    },\r\n    media: {\r\n        marginTop : \"1vh\",\r\n        height:'70vh',\r\n    },\r\n    center: {\r\n        marginLeft: 'calc(50% - 16vw)',\r\n        marginTop : \"11vh\",\r\n        marginBottom : \"2vh\",\r\n        width: '30vw',\r\n    },\r\n    action: {\r\n        padding: 5,\r\n        marginTop: 2,\r\n        marginRight: 'auto',\r\n        marginLeft: 'auto',\r\n    },\r\n    bullet: {\r\n        display: 'inline-block',\r\n        margin: '0 2px',\r\n        transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n        fontSize: 14,\r\n    },\r\n    pos: {\r\n        marginBottom: 12,\r\n    },\r\n});\r\n\r\n\r\nconst SearchMovieDetail = (props :any) => {\r\n    const classes = useStyles();\r\n    const [reciveMovie, setMovie] = React.useState({\r\n        id: '',\r\n        title: '',\r\n        year: '',\r\n        type: '',\r\n        poster: '',\r\n    });\r\n    const [movieInfo, setMovieInfo] = React.useState({\r\n        actors: '',\r\n        ageRating: '',\r\n        awards: '',\r\n        director: '',\r\n        plot: '',\r\n        poster: '',\r\n        production: '',\r\n        rating: '',\r\n        releaseDate: '',\r\n        title: '',\r\n        votes: '',\r\n        writer: '',\r\n    });\r\n    const favouritesService = useService(FavouritesService);\r\n    const favourites = useSelector(favouritesSelector);\r\n    const cookies = new Cookies();\r\n\r\n    React.useEffect(() => {\r\n        setMovie(props.location.state)\r\n        movieService.searchById(reciveMovie.id).then(resp => {\r\n            if (resp) {\r\n                setMovieInfo({\r\n                    actors: resp.actors,\r\n                    ageRating: resp.rating,\r\n                    awards: resp.awards,\r\n                    director: resp.director,\r\n                    plot: resp.plot,\r\n                    poster: resp.poster,\r\n                    production: resp.production,\r\n                    rating: resp.rating,\r\n                    releaseDate: resp.releaseDate,\r\n                    title: resp.title,\r\n                    votes: resp.votes,\r\n                    writer: resp.writer,\r\n                })\r\n            }\r\n        });\r\n        console.log('halo?')\r\n    },[props.location.state, reciveMovie]);\r\n\r\n    const handleAddFavourites = (props : any) => {\r\n        favouritesService.setNewFavourites({\r\n            id: props.id,\r\n            title: props.title,\r\n            year: props.year,\r\n            type: props.type,\r\n            poster: props.poster\r\n        });\r\n        console.log(favourites)\r\n    }\r\n\r\n    const handleDelFavourites = (props : any) => {\r\n        favouritesService.deleteFavourites({\r\n            id: props.id,\r\n            title: props.title,\r\n            year: props.year,\r\n            type: props.type,\r\n            poster: props.poster\r\n        });\r\n    }\r\n    cookies.set('fav', favourites, { path: '/' });\r\n    return (\r\n        <div>\r\n            <NavPanel/>\r\n            <br />\r\n            <br />\r\n\r\n                            <Card className={classes.root} color=\"secondary\" variant=\"outlined\">\r\n                                <CardActionArea >\r\n                                    <CardContent className={classes.content}>\r\n                                        <Typography className={classes.content} variant=\"h6\" component=\"h6\">\r\n                                            <p>{movieInfo.title}</p>\r\n                                        </Typography>\r\n                                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                            {movieInfo.director}\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                    <CardMedia\r\n                                        className={classes.media}\r\n                                        image={movieInfo.poster !== \"N/A\" ? movieInfo.poster : 'https://upload.wikimedia.org/wikipedia/commons/a/ac/No_image_available.svg'}\r\n                                        title={movieInfo.title}\r\n                                    />\r\n                                </CardActionArea>\r\n                            </Card>\r\n            <Card className={classes.root2} variant=\"outlined\">\r\n                <CardContent>\r\n                    <Typography className={classes.title} color=\"textPrimary\" gutterBottom variant=\"h2\" component=\"h1\">\r\n                        <h2>Information:</h2>\r\n                    </Typography>\r\n                    <Typography className={classes.pos} color=\"textPrimary\">\r\n                        Actors: {movieInfo.actors}\r\n                    </Typography>\r\n                    <Typography className={classes.pos} color=\"secondary\">\r\n                        Rating: {movieInfo.rating}\r\n                    </Typography>\r\n                    <Typography className={classes.pos} color=\"textPrimary\">\r\n                        Awards: {movieInfo.awards}\r\n                    </Typography>\r\n                    <Typography className={classes.pos} color=\"textPrimary\">\r\n                        Plot: {movieInfo.plot}\r\n                    </Typography>\r\n                    <Typography className={classes.pos} color=\"textPrimary\">\r\n                        Production: {movieInfo.production}\r\n                    </Typography>\r\n                    <Typography className={classes.pos} color=\"textPrimary\">\r\n                        Release Date: {movieInfo.releaseDate}\r\n                    </Typography>\r\n                </CardContent>\r\n                <CardActions >\r\n                    {favourites.filter(f => f.id === reciveMovie.id).length ?\r\n                                        <Button onClick={() => handleDelFavourites(reciveMovie)}\r\n                                                size=\"small\"\r\n                                                color=\"secondary\" variant=\"outlined\"\r\n                                                className={classes.action}\r\n                                        >\r\n                                            Usuń z ulubionych\r\n                                        </Button>\r\n                                        :\r\n                                        <Button onClick={() => handleAddFavourites(reciveMovie)}\r\n                                                size=\"small\"\r\n                                                color=\"secondary\" variant=\"outlined\"\r\n                                                className={classes.action}\r\n                                        >\r\n                                            Dodaj do ulubionych\r\n                                        </Button>\r\n                                    }\r\n                </CardActions>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchMovieDetail;\r\n","import React from 'react';\nimport NavPanel from '../../components/navPanel/NavPanel'\n\nconst Home = () => {\n\n    return (\n        <div>\n            <NavPanel />\n        </div>\n    );\n\n};\n\nexport default Home;","import { ITodo } from '../store/reducers/todos.reducer';\nimport store from '../store';\nimport { todosActions } from '../store/actions/todos.actions';\n\nexport class TodoService {\n\n  setNewTodo(todo: ITodo) {\n   store.dispatch(todosActions.setNewTodo(todo));\n  }\n\n  deleteTodo(todo: ITodo) {\n    store.dispatch(todosActions.setDeleteTodo(todo));\n  }\n\n  setTodoDone(todo: ITodo) {\n    store.dispatch(todosActions.setTodoDone(todo.id));\n  }\n\n}\n","import { IStoreState } from '../store';\nimport { createSelector } from 'reselect';\n\nexport const todosSelector = createSelector(\n  (state: IStoreState) => state.todos,\n  todos => todos.list\n);\n","import React from 'react';\r\nimport { useService } from '../../hooks/useService';\r\nimport { TodoService } from '../../services/todo.service';\r\nimport { useSelector } from 'react-redux';\r\nimport { todosSelector } from '../../store/selectors/todos.selectors';\r\n\r\n\r\nconst TodoPanel = () => {\r\n  const todoService = useService(TodoService);\r\n  const todos = useSelector(todosSelector);\r\n\r\n  React.useEffect(() => {\r\n    todoService.setNewTodo({\r\n      done: false,\r\n      label: 'nowe todo',\r\n      description: 'opis todo',\r\n      id: 1\r\n    });\r\n  }, []);\r\n\r\n\r\n  return <div>{todos.map((todo, index) => <div key={index}>{todo.label}</div>)}</div>;\r\n};\r\n\r\n\r\nexport default TodoPanel;","import React from 'react';\r\nimport NavPanel from '../../components/navPanel/NavPanel'\r\nimport {Button, Card, CardActionArea, CardActions, CardContent, CardMedia, Typography} from \"@material-ui/core\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {favouritesSelector} from \"../../store/selectors/fav.selectors\";\r\nimport {useService} from \"../../hooks/useService\";\r\nimport {FavouritesService} from \"../../services/fav.service\";\r\nimport {useHistory} from \"react-router\";\r\nimport {Cookies} from \"react-cookie\";\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        marginBottom: \"1vh\",\r\n        marginLeft: \"1.5vw\",\r\n        display: \"inline-block\",\r\n        width: '30vw',\r\n        height: 'auto',\r\n        // marginRight: 'auto',\r\n        // marginLeft: 'auto',\r\n        textAlign: 'center',\r\n    },\r\n    content: {\r\n        maxHeight:'15vh',\r\n        overflow: 'hidden',\r\n    },\r\n    media: {\r\n        marginTop : \"1vh\",\r\n        height:'53vh',\r\n    },\r\n    center: {\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto',\r\n        marginTop : \"11vh\",\r\n        marginBottom : \"2vh\",\r\n        width: '100%',\r\n        textAlign: 'center',\r\n    },\r\n    action: {\r\n        padding: 5,\r\n        marginTop: 2,\r\n        marginRight: 'auto',\r\n        marginLeft: 'auto',\r\n    },\r\n});\r\n\r\n\r\nconst FavPanel = () => {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const favouritesService = useService(FavouritesService);\r\n    const favourites = useSelector(favouritesSelector);\r\n    const cookies = new Cookies();\r\n\r\n    const RedirectTo = (\r\n        path: string,\r\n        name: string,\r\n        state:\r\n            {\r\n                id: string,\r\n                title: string,\r\n                year: string,\r\n                type: string,\r\n                poster: string,\r\n            }\r\n    ) => <Button color=\"secondary\" className={classes.action} onClick={() => history.push(path, state)}>{name}</Button>\r\n\r\n    const handleDelFavourites = (props : any) => {\r\n        favouritesService.deleteFavourites({\r\n            id: props.id,\r\n            title: props.title,\r\n            year: props.year,\r\n            type: props.type,\r\n            poster: props.poster\r\n        });\r\n    }\r\n\r\n    cookies.set('fav', favourites, { path: '/' });\r\n    return (\r\n      <div>\r\n        <NavPanel />\r\n        <h1 className={classes.center}>Favorites:</h1>\r\n          {favourites.map((favourites) =>(\r\n              <Card className={classes.root} color=\"secondary\" variant=\"outlined\">\r\n                  <CardActionArea >\r\n                      <CardContent className={classes.content}>\r\n                          <Typography className={classes.content} gutterBottom variant=\"h6\" component=\"h2\">\r\n                              <p>{favourites.title}<br />{favourites.year}</p>\r\n                          </Typography>\r\n                          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                              {favourites.type}\r\n                          </Typography>\r\n                      </CardContent>\r\n                      <CardMedia\r\n                          className={classes.media}\r\n                          image={favourites.poster !== \"N/A\" ? favourites.poster : 'https://upload.wikimedia.org/wikipedia/commons/a/ac/No_image_available.svg'}\r\n                          title={favourites.title}\r\n                      />\r\n                  </CardActionArea>\r\n                  <CardActions>\r\n                      <Button onClick={() => handleDelFavourites(favourites)}\r\n                              size=\"small\"\r\n                              color=\"secondary\" variant=\"outlined\"\r\n                              className={classes.action}\r\n                      >\r\n                          Usuń z ulubionych\r\n                      </Button>\r\n                      {RedirectTo(\"/145985fakultetSoftwarehut/searchDetail/\"+favourites.id, 'Szczegóły', {\r\n                          id: favourites.id,\r\n                          title: favourites.title,\r\n                          year: favourites.year,\r\n                          type: favourites.type,\r\n                          poster: favourites.poster})}\r\n                  </CardActions>\r\n              </Card>\r\n          ))\r\n          }\r\n\r\n      </div>\r\n\r\n  );\r\n};\r\n\r\nexport default FavPanel;","import React from 'react';\r\nimport { Switch, Route, BrowserRouter } from 'react-router-dom';\r\nimport Movie from './views/movie/Movie';\r\nimport SearchMovie from './views/searchMovie/SearchMovie';\r\nimport SearchMovieDetail from './views/searchMovieDetail/SearchMovieDetail';\r\nimport Home from './views/home/Home';\r\nimport TodoPanel from './views/todoPanel/TodoPanel';\r\nimport FavPanel from './views/FavPanel/FavPanel';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\n\r\n\r\n//yarn add @types/react-router-dom  @types/react-router\r\n\r\n\r\nconst App = () => {\r\n  return (\r\n    <div>\r\n        <BrowserRouter>\r\n          <Provider store={store}>\r\n            <Switch>\r\n              <Route path=\"/145985fakultetSoftwarehut/movie\" component={Movie}/>\r\n              <Route path=\"/145985fakultetSoftwarehut/search\" component={SearchMovie}/>\r\n              <Route path=\"/145985fakultetSoftwarehut/searchDetail/:id\" component={SearchMovieDetail}/>\r\n              <Route path=\"/145985fakultetSoftwarehut/todo\" component={TodoPanel}/>\r\n              <Route path=\"/145985fakultetSoftwarehut/fav\" component={FavPanel}/>\r\n              <Route path=\"/145985fakultetSoftwarehut/\" component={Home}/>\r\n            </Switch>\r\n          </Provider>\r\n        </BrowserRouter>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n\r\n\r\n\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}